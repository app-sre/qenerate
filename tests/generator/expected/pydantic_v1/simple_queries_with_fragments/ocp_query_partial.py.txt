"""
Generated by qenerate plugin=pydantic_v1. DO NOT MODIFY MANUALLY!
"""
from typing import (  # noqa: F401 # pylint: disable=W0611
    Optional,
    Union,
)

from pydantic import (  # noqa: F401 # pylint: disable=W0611
    BaseModel,
    Extra,
    Field,
    Json,
)

from tests.generator.definitions.simple_queries_with_fragments.vault_secret_partial_fragment import VaultSecretPartial


DEFINITION = """
fragment VaultSecretPartial on VaultSecret_v1 {
  path
  field
}


query OCPAuthPartial {
  ocp_release_mirror: ocp_release_mirror_v1 {
    hiveCluster {
      name
      ocm {
        name
        offlineToken {
            ... VaultSecretPartial
            format
            version
        }
      }
    }
  }
}

"""


class VaultSecretV1(VaultSecretPartial):
    q_format: Optional[str] = Field(..., alias="format")
    version: Optional[int] = Field(..., alias="version")

    class Config:
        smart_union = True
        extra = Extra.forbid


class OpenShiftClusterManagerV1(BaseModel):
    name: str = Field(..., alias="name")
    offline_token: Optional[VaultSecretV1] = Field(..., alias="offlineToken")

    class Config:
        smart_union = True
        extra = Extra.forbid


class ClusterV1(BaseModel):
    name: str = Field(..., alias="name")
    ocm: Optional[OpenShiftClusterManagerV1] = Field(..., alias="ocm")

    class Config:
        smart_union = True
        extra = Extra.forbid


class OcpReleaseMirrorV1(BaseModel):
    hive_cluster: ClusterV1 = Field(..., alias="hiveCluster")

    class Config:
        smart_union = True
        extra = Extra.forbid


class OCPAuthPartialQueryData(BaseModel):
    ocp_release_mirror: Optional[list[Optional[OcpReleaseMirrorV1]]] = Field(..., alias="ocp_release_mirror")

    class Config:
        smart_union = True
        extra = Extra.forbid
