[tool.poetry]
name = "qenerate"
version = "0.6.5"
description = "Code Generator for GraphQL Query and Fragment Data Classes"
authors = ["Red Hat - Service Delivery - AppSRE <sd-app-sre@redhat.com>"]
maintainers = ["Red Hat - Service Delivery - AppSRE <sd-app-sre@redhat.com>"]
license = "Apache-2.0"
homepage = "https://github.com/app-sre/qenerate"
repository = "https://github.com/app-sre/qenerate"
documentation = "https://github.com/app-sre/qenerate"

[tool.poetry.dependencies]
python = "^3.9"
requests = "^2.22"
graphql-core = "^3.2"

[tool.poetry.group.dev.dependencies]
pytest = "^5.2"
requests-mock = "^1.9"
types-requests = "^2.27"
pyfakefs = "^4.5"
mypy = "^1.8.0"
ruff = "^0.4.8"

[tool.poetry.scripts]
qenerate = 'qenerate.cli:run'

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = 'py39'
required-version = "0.4.8"

src = ["qenerate"]
extend-exclude = ["demo", ".local", ".cache"]
fix = true

[tool.ruff.lint]
preview = true

# defaults are ["E4", "E7", "E9", "F"]
extend-select = [
    # flake8 default rules
    "E1", # preview rule
    "E2", # preview rule
    "W",
    # isort
    "I",
    # pylint
    "PL",
    # pyupgrade
    "UP",
]
ignore = [
    "PLR0913", # Too many arguments
    "PLR0917", # Too many positional arguments
    "PLR6301", # Method `...` could be a function, class method, or static method
]
[tool.ruff.format]
preview = true

[tool.ruff.lint.isort]
known-first-party = ["qenerate"]

# Mypy configuration
[tool.mypy]
files = ["qenerate", "tests"]
enable_error_code = ["truthy-bool", "redundant-expr"]
no_implicit_optional = true
check_untyped_defs = true
warn_unused_ignores = true
show_error_codes = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
# Below are all of the packages that don't implement stub packages. Mypy will throw an error if we don't ignore the
# missing imports. See: https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
module = ["pytest.*", "pyfakefs.*"]
ignore_missing_imports = true
